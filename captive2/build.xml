<project default="test"> 

  <!-- Once set, ant properties can not be overridden. -->

  <!-- Give build.properties the first opportunity to set properties. -->
  <property file="build.properties" />

  <!-- Give environmental variables the second chance to set properties. -->
  <property environment="env" />
  <property name="air_sdk" value="${env.AIR_SDK}" /> 

  <!-- Assign default values to properties that have not yet been set. -->
  <property name="air_sdk"         value="AIRSDK_Compiler" /> 
  <property name="config-message"  value="Hello from build file." /> 

  <!-- Set internally defined properties. -->
  <property name="adl"                value="${air_sdk}/bin/adl"    /> 
  <property name="adt"                value="${air_sdk}/bin/adt"    /> 
  <property name="mxmlc"              value="${air_sdk}/bin/mxmlc"  /> 
  <property name="certificate-cn"     value="csusbdt"               />
  <property name="keystore-password"  value="1234"                  />
  <property name="dmg-file"           value="hello-air.dmg"         />

  <!--property name="ADT.JAR" value="${env.AIR_SDK}/lib/adt.jar"/--> 

  <!-- To not allow automatic overwrite of keystore file. -->
  <available file="keystore" property="keystore-exists" />

  <!--
    The air package needs to be signed.
    The keystore target generates a self-signed certificate and
    stores this in a file called _keystore_.
    Clean does not remove the keystore file.
    Add the path to the keystore file to .gitignore to
    avoid exposing to outside.
  -->
  <target name="keystore" 
          unless="keystore-exists"
          description="generate keystore with self-signed certificate">
    <exec executable="${adt}"> 
      <arg value="-certificate" />
      <arg line="-cn ${certificate-cn}" />
      <arg line="-validityPeriod 5" />
      <arg value="2048-RSA" />
      <arg value="keystore" />
      <arg value="${keystore-password}" />
    </exec> 
  </target>

  <!-- The clean target deletes all derived files except the keystore file. -->
  <target name="clean"> 
    <delete file="Main.swf"    />
    <delete file="Main.air"    />
    <delete file="${dmg-file}" />
  </target>

  <!--
    The compile target generates Main.swf. 
    Configuration strings are passed in here.
  -->
  <target name="compile"> 
    <exec executable="${mxmlc}"> 
      <arg value="-define+=CONFIG::message,&quot;'${config-message}'&quot;" /> 
      <arg line="-o Main.swf" /> 
      <!--arg value="- -" /--> 
      <!--arg value="-library-path+=${air_sdk}/lib/air/airglobal.swc" /--> 
      <arg value="Main.as" /> 
    </exec>  
  </target>

  <target name="test" depends="compile"> 
    <exec executable="${adl}"> 
      <arg value="application.xml" />
    </exec>
  </target>

  <target name="air" depends="compile">
    <exec executable="${adt}"> 
      <arg value="-package"                  />
      <arg line="-storetype pkcs12"          />
      <arg line="-keystore keystore"         />
      <arg line="-storepass 1234"            />
      <arg line="-target air"                />
      <arg value="Main.air"                  />
      <arg value="application.xml"           />
      <arg value="Main.swf"                  />
      <arg value="icons"                     />
    </exec>  
  </target>

  <target name="package-osx" depends="air">
    <exec executable="${adt}"> 
      <arg value="-package"                  />
      <arg line="-target native"             />
      <arg value="${dmg-file}"               />
      <arg value="Main.air"                  />
    </exec>  
  </target>

<!--
  <target name="copy-resources" depends="init"> 
    <copy file="application.xml" todir="${tempdir}" />
    <copy todir="${tempdir}">
      <fileset dir="." includes="icons/**" />
    </copy>
  </target> 
-->

</project>

