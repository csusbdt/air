<project name="desktop"> 

  <!-- Property overrides come first (because ant properties are immutable). -->

  <property file="props.xml" />

  <!-- Settable Properties -->

  <property name="versionNumber" value="1.0.6" />
  <property name="installerSite" value="http://localhost:5000/" />

  <!-- Derived Properties -->

  <property name="osxInstallerFilename" value="hello-air-${versionNumber}.dmg" />
  <property name="osxInstallerURL" value="${installerSite}${osxInstallerFilename}" />
  <property name="osxInstallerURLURL" value="${installerSite}hello-air-osx" />

  <!--property name="osxCaptiveInstaller"           value="hello-air-${versionNumber}.app"    /-->

  <property name="winInstallerFilename" value="hello-air-${versionNumber}.msi" />
  <property name="winInstallerURL" value="${installerSite}${winInstallerFilename}" />
  <property name="winInstallerURLURL" value="${installerSite}hello-air-win" />
  
  <!-- Libraries -->

  <!--  NOT USED - NOT NEEDED - WILL NEED STARLING, etc. (I think)
  <property name="airglobal" value="${env.AIR_SDK_HOME}/frameworks/libs/air/airglobal.swc" /> 
  -->

  <!-- Clean Target -->

  <target name="clean" description="Delete derived files."> 
    <delete dir="temp" />
  </target>

  <!-- Doc Target -->

  <target name="doc" description="Generate documentation."> 
    <delete dir="doc" />
    <exec executable="${aasdoc}">
      <arg value="-define+=CONFIG::installerSite,&quot;'&#36;{installerSite}'&quot;"                            /> 
      <arg value="-define+=CONFIG::installerFilename,&quot;'&#36;{osxInstallerFilename}'&quot;"                 /> 
      <arg value="-define+=CONFIG::installerFilenameResource,&quot;'&#36;{osxInstallerFilenameResource}'&quot;" /> 
      <arg line="-doc-sources src"  />
      <arg line="-source-path src"  />
      <arg line="-main-title &quot;Hello Air Documentation&quot;" />
      <arg line="-window-title &quot;Hello Air Documentation&quot;" />
      <arg line="-output doc"  />
    </exec>
  </target>

  <!-- Compile Targets -->

  <target name="compile-test" description="Compile without version check."> 
    <mkdir dir="temp" />
    <exec executable="${amxmlc}" failonerror="true"> 
      <arg line="-o temp/Main.swf"  /> 
      <arg line="-source-path src"  />
      <arg value="--"               />
      <arg value="src/PlainMain.as" /> 
    </exec>  
  </target>
<!--
ADD STARLING, ETC?
      <arg value="-library-path=${airglobal}" /> 
-->

  <target name="compile-osx" description="Compile for osx."> 
    <mkdir dir="temp" />
    <exec executable="amxmlc" failonerror="true"> 
      <arg line="-o temp/Main.swf" /> 
      <arg value="-define+=CONFIG::os,&quot;'osx'&quot;" />
      <arg value="-define+=CONFIG::versionNumber,&quot;'${versionNumber}'&quot;" /> 
      <arg value="-define+=CONFIG::installerURL,&quot;'${osxInstallerURL}'&quot;" /> 
      <arg value="-define+=CONFIG::installerURLURL,&quot;'${osxInstallerURLURL}'&quot;" /> 
      <arg value="-define+=CONFIG::installerFilename,&quot;'${osxInstallerFilename}'&quot;" /> 
      <arg value="-debug=true"     />
      <arg line="-source-path src" />
      <arg value="--"              /> 
      <arg value="src/OsxMain.as"  /> 
    </exec>  
  </target>

  <target name="compile-win">
    <exec executable="cmd">
      <arg value="/c" />
      <arg value="amxmlc.bat" />
      <arg line="-o temp/Main.swf" />
      <arg value="-define+=CONFIG::os,&quot;'win'&quot;" />
      <arg value="-define+=CONFIG::versionNumber,&quot;'${versionNumber}'&quot;" /> 
      <arg value="-define+=CONFIG::installerURL,&quot;'${winInstallerURL}'&quot;" /> 
      <arg value="-define+=CONFIG::installerURLURL,&quot;'${winInstallerURLURL}'&quot;" /> 
      <arg value="-define+=CONFIG::installerFilename,&quot;'${winInstallerFilename}'&quot;" /> 
      <arg value="-debug=true" />
      <arg line="-source-path src" />
      <arg value="--" /> 
      <arg value="src/WinMain.as" /> 
    </exec>
  </target>

  <!-- Application Descriptor Targets -->

  <target name="app-test">
    <mkdir dir="temp" />
    <filter token="versionNumber" value="${versionNumber}" />
    <filter token="supportedProfiles" value="desktop" />
    <copy file="application.xml" todir="temp" filtering="true" overwrite="true" />
  </target>

  <target name="app-osx">
    <mkdir dir="temp" />
    <filter token="versionNumber" value="${versionNumber}" />
    <filter token="supportedProfiles" value="extendedDesktop desktop" />
    <copy file="application.xml" todir="temp" filtering="true" overwrite="true" />
  </target>

  <target name="app-win">
    <antcall target="app-osx" />
  </target>

  <!-- Test Target -->

  <target name="test" 
          depends="compile-test,app-test" 
          description="Test swf file without version check."> 
    <exec executable="${adl}" dir="temp"> 
      <!--arg value="-nodebug" /-->
      <arg value="application.xml" />
    </exec>
  </target>

  <target name="test-osx" 
          depends="compile-osx,app-osx" 
          description="Test swf file for version check on osx."> 
    <exec executable="adl" dir="temp"> 
      <arg line="-profile extendedDesktop" />
      <arg value="application.xml" />
    </exec>
  </target>

  <target name="test-win" 
          depends="compile-win,app-win" 
          description="Test swf file for version check on win."> 
    <exec executable="adl" dir="temp">
      <arg line="-profile extendedDesktop" />
      <arg value="application.xml" />
    </exec>
  </target>

  <!-- OSX Package Target -->

  <target name="osx" 
          depends="compile-osx,app-osx"
          description="Generate the osx installer.">
    <exec executable="${adt}" dir="temp"> 
      <arg value="-package"                       />
      <arg line="-storetype pkcs12"               />
      <arg line="-keystore ../keystore/keystore"  />
      <arg line="-storepass 1234"                 />
      <arg line="-target native"                  />
      <arg value="${osxInstallerFilename}"        />
      <arg value="application.xml"                />
      <arg value="Main.swf"                       />
      <arg line="-C ../ icons"                    />
    </exec>
  </target>

  <!-- captive installer not yet working -->
  <target name="captive-osx" 
          depends="compile-osx,app-osx"
          description="Generate the osx captive installer.">
    <exec executable="${adt}" dir="temp"> 
      <arg value="-package"                       />
      <arg line="-storetype pkcs12"               />
      <arg line="-keystore ../keystore/keystore"  />
      <arg line="-storepass 1234"                 />
      <arg line="-target bundle"                  />
      <arg value="${osxCaptiveInstaller}"         />
      <arg value="application.xml"                />
      <arg value="Main.swf"                       />
      <arg line="-C ../ icons"                    />
    </exec>
  </target>

  <!-- Utility targets for osx development -->

  <target name="log" 
          description="Display installation log messages; use to troubleshoot install problems."> 
    <exec executable="tail"> 
      <arg line="-f /private/var/log/system.log" />
    </exec>
  </target>

  <target name="touch" 
          description="Touch."> 
    <exec executable="touch"> 
      <!--arg value="/Applications/HelloDesktopAIR.app/Contents/Resources/META-INF/AIR/debug" /-->
      <arg value="/Volumes/Install HelloDesktopAIR/HelloDesktopAIR.app/Contents/Resources/META-INF/AIR/debug" />
    </exec>
  </target>

  <!-- WIN Package Target -->

  <target name="win" 
          depends="compile-win,app-win"
          description="Generate the win installer.">
    <exec executable="${adt}" dir="temp"> 
      <arg value="-package"                       />
      <arg line="-storetype pkcs12"               />
      <arg line="-keystore ../keystore/keystore"  />
      <arg line="-storepass 1234"                 />
      <arg line="-target native"                  />
      <arg value="${winInstallerFilename}"        />
      <arg value="application.xml"                />
      <arg value="Main.swf"                       />
      <arg line="-C ../ icons"                    />
    </exec>
  </target>


  <!-- NOTES -->

  <!--

    To run debugger, run fdb and enter "run" at command prompt.
    Then, start app.  Then enter "continue" at the fdb command prompt.

  -->

</project>

