<project name="desktop"> 
  <!-- 
       This ant build file is used to:

       1. Build a self-updating OS X application with native extensions.
       2. Build a self-updating Windows application with native extensions.
       3. Build a self-updating OS X application that uses the Adobe update framework.
       4. Build a self-updating Windows application that uses the Adobe update framework.
       5. Build an OS X application with a captive AIR runtime (not self-updating).
       6. Build a Windows application with a captive AIR runtime (not self-updating).
  -->

  <!-- Property overrides come first (because ant properties are immutable). -->

  <property file="props.properties" />

  <!-- Settable Properties -->

  <property name="versionNumber" value="1.0.0" />
  <property name="installerSite" value="http://localhost:5000" />

  <!-- Derived Properties -->

  <property name="appName"                     value="hello-air" />
  <property name="desktopUpdateURL"            value="${installerSite}/${appName}.xml" />
  <property name="desktopInstallerFilename"    value="${appName}-${versionNumber}.air" />
  <property name="osxNativeInstallerFilename"  value="${appName}-${versionNumber}.dmg" />
  <property name="winNativeInstallerFilename"  value="${appName}-${versionNumber}.msi" />
  <property name="osxCaptiveFilename"          value="${appName}-${versionNumber}.app" />
  <!--property name="airglobal" value="${env.AIR_SDK_HOME}/frameworks/libs/air/airglobal.swc" /--> 

  <!-- Clean Target -->

  <target name="clean" description="Delete derived files."> 
    <delete dir="temp" />
  </target>

  <!-- Doc Target -->

  <target name="doc" description="Generate documentation."> 
    <delete dir="doc" />
    <exec executable="aasdoc">
      <arg value="-define+=CONFIG::versionNumber,&quot;'${versionNumber}'&quot;" /> 
      <arg value="-define+=CONFIG::installerSite,&quot;'${installerSite}'&quot;" /> 
      <arg line="-doc-sources src"  />
      <arg line="-source-path src"  />
      <arg line="-main-title &quot;Hello Air Documentation&quot;" />
      <arg line="-window-title &quot;Hello Air Documentation&quot;" />
      <arg line="-output doc"  />
    </exec>
  </target>

  <!-- Compile Targets -->

<!--
ADD STARLING, ETC?
      <arg value="-library-path=${airglobal}" /> 
-->

  <target name="compile-desktop-osx" description="Compile desktop in osx."> 
    <mkdir dir="temp" />
    <exec executable="amxmlc" failonerror="true"> 
      <arg line="-o temp/Main.swf" /> 
      <arg value="-define+=CONFIG::versionNumber,&quot;'${versionNumber}'&quot;" /> 
      <arg value="-define+=CONFIG::installerSite,&quot;'${installerSite}'&quot;" /> 
<arg value="-debug=true" />
      <arg line="-source-path src" />
      <arg value="--" /> 
      <arg value="src/MainDesktop.as" /> 
    </exec>
  </target>

  <target name="compile-desktop-win" description="Compile desktop in win.">
    <exec executable="cmd">
      <arg value="/c" />
      <arg value="amxmlc.bat" />
      <arg line="-o temp/Main.swf" />
      <arg value="-define+=CONFIG::versionNumber,&quot;'${versionNumber}'&quot;" /> 
      <arg value="-define+=CONFIG::installerSite,&quot;'${installerSite}'&quot;" /> 
<arg value="-debug=true" />
      <arg line="-source-path src" />
      <arg value="--" /> 
      <arg value="src/MainDesktop.as" /> 
    </exec>
  </target>

  <target name="compile-native-osx" description="Compile native installer for osx."> 
    <mkdir dir="temp" />
    <exec executable="amxmlc" failonerror="true"> 
      <arg line="-o temp/Main.swf" /> 
      <arg value="-define+=CONFIG::os,&quot;'osx'&quot;" />
      <arg value="-define+=CONFIG::versionNumber,&quot;'${versionNumber}'&quot;" /> 
      <arg value="-define+=CONFIG::installerSite,&quot;'${installerSite}'&quot;" /> 
<arg value="-debug=true" />
      <arg line="-source-path src" />
      <arg value="--" /> 
      <arg value="src/MainNativeOsx.as" /> 
    </exec>
  </target>

  <target name="compile-native-win" description="Compile native installer for win.">
    <exec executable="cmd">
      <arg value="/c" />
      <arg value="amxmlc.bat" />
      <arg line="-o temp/Main.swf" />
      <arg value="-define+=CONFIG::os,&quot;'win'&quot;" />
      <arg value="-define+=CONFIG::versionNumber,&quot;'${versionNumber}'&quot;" /> 
      <arg value="-define+=CONFIG::installerSite,&quot;'${installerSite}'&quot;" /> 
<arg value="-debug=true" />
      <arg line="-source-path src" />
      <arg value="--" /> 
      <arg value="src/MainNativeWin.as" /> 
    </exec>
  </target>

  <!-- Application Descriptor Targets -->

  <target name="app-desktop">
    <mkdir dir="temp" />
    <filter token="versionNumber" value="${versionNumber}" />
    <filter token="supportedProfiles" value="desktop" />
    <copy file="application.xml" todir="temp" filtering="true" overwrite="true" />
  </target>

  <target name="app-native">
    <mkdir dir="temp" />
    <filter token="versionNumber" value="${versionNumber}" />
    <filter token="supportedProfiles" value="extendedDesktop desktop" />
    <copy file="application.xml" todir="temp" filtering="true" overwrite="true" />
  </target>

  <!-- Test Targets -->

  <target name="test-desktop-osx" 
          depends="compile-desktop-osx,app-desktop" 
          description="Test desktop in osx."> 
    <exec executable="adl" dir="temp"> 
      <arg value="application.xml" />
    </exec>
  </target>

  <target name="test-desktop-win" 
          depends="compile-desktop-win,app-desktop" 
          description="Test desktop in win."> 
    <exec executable="adl" dir="temp"> 
      <arg value="application.xml" />
    </exec>
  </target>

  <target name="test-native-osx" 
          depends="compile-native-osx,app-native" 
          description="Test native desktop in osx."> 
    <exec executable="adl" dir="temp"> 
      <arg line="-profile extendedDesktop" />
      <arg value="application.xml" />
    </exec>
  </target>

  <target name="test-native-win" 
          depends="compile-native-win,app-native" 
          description="Test native desktop in win."> 
    <exec executable="adl" dir="temp"> 
      <arg line="-profile extendedDesktop" />
      <arg value="application.xml" />
    </exec>
  </target>

  <!-- Installer Targets -->

  <target name="desktop-osx" 
          depends="compile-desktop-osx,app-desktop"
          description="Generate the desktop installer in osx.">
    <exec executable="adt" dir="temp"> 
      <arg value="-package"                       />
      <arg line="-storetype pkcs12"               />
      <arg line="-keystore ../keystore/keystore"  />
      <arg line="-storepass 1234"                 />
      <arg line="-target air"                     />
      <arg value="${desktopInstallerFilename}"    />
      <arg value="application.xml"                />
      <arg value="Main.swf"                       />
      <arg line="-C ../ icons"                    />
    </exec>
  </target>

  <target name="desktop-win" 
          depends="compile-desktop-win,app-desktop"
          description="Generate the desktop installer in win.">
    <exec executable="adt" dir="temp"> 
      <arg value="-package"                       />
      <arg line="-storetype pkcs12"               />
      <arg line="-keystore ../keystore/keystore"  />
      <arg line="-storepass 1234"                 />
      <arg line="-target native"                  />
      <arg value="${desktopInstallerFilename}"    />
      <arg value="application.xml"                />
      <arg value="Main.swf"                       />
      <arg line="-C ../ icons"                    />
    </exec>
  </target>

  <target name="native-osx" 
          depends="compile-native-osx,app-native"
          description="Generate the native osx installer.">
    <exec executable="adt" dir="temp"> 
      <arg value="-package"                       />
      <arg line="-storetype pkcs12"               />
      <arg line="-keystore ../keystore/keystore"  />
      <arg line="-storepass 1234"                 />
      <arg line="-target native"                  />
      <arg value="${osxNativeInstallerFilename}"  />
      <arg value="application.xml"                />
      <arg value="Main.swf"                       />
      <arg line="-C ../ icons"                    />
    </exec>
  </target>

  <target name="native-win" 
          depends="compile-native-win,app-native"
          description="Generate the native win installer.">
    <exec executable="adt" dir="temp"> 
      <arg value="-package"                       />
      <arg line="-storetype pkcs12"               />
      <arg line="-keystore ../keystore/keystore"  />
      <arg line="-storepass 1234"                 />
      <arg line="-target native"                  />
      <arg value="${winNativeInstallerFilename}"  />
      <arg value="application.xml"                />
      <arg value="Main.swf"                       />
      <arg line="-C ../ icons"                    />
    </exec>
  </target>

  <target name="captive-osx" 
          depends="compile-native-osx,app-native"
          description="Generate the captive osx installer.">
    <exec executable="adt" dir="temp"> 
      <arg value="-package"                       />
      <arg line="-storetype pkcs12"               />
      <arg line="-keystore ../keystore/keystore"  />
      <arg line="-storepass 1234"                 />
      <arg line="-target bundle"                  />
      <arg value="${osxCaptiveInstallerFilename}" />
      <arg value="application.xml"                />
      <arg value="Main.swf"                       />
      <arg line="-C ../ icons"                    />
    </exec>
  </target>

  <!-- Utility targets for osx development -->

  <target name="log-osx" 
          description="Display installation log messages; use to troubleshoot install problems."> 
    <exec executable="tail"> 
      <arg line="-f /private/var/log/system.log" />
    </exec>
  </target>

  <target name="touch" 
          description="Touch."> 
    <exec executable="touch"> 
      <!--arg value="/Applications/HelloDesktopAIR.app/Contents/Resources/META-INF/AIR/debug" /-->
      <arg value="/Volumes/Install HelloAIR/HelloAIR.app/Contents/Resources/META-INF/AIR/debug" />
    </exec>
  </target>


  <!-- NOTES -->

  <!--
    To run debugger, run fdb and enter "run" at command prompt.
    Then, start app.  Then enter "continue" at the fdb command prompt.
  -->

</project>

